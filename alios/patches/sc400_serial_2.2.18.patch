--- linux/drivers/char/serial.c.orig	Wed Jun  7 23:26:42 2000
+++ linux/drivers/char/serial.c	Thu Feb  1 15:19:22 2001
@@ -3,6 +3,8 @@
  *
  *  Copyright (C) 1991, 1992  Linus Torvalds
  *
+ *  AMD Elan SC400 changes (7/00): Copyright (c), 2000 telos GmbH
+ *
  *  Extensively rewritten by Theodore Ts'o, 8/16/92 -- 9/14/92.  Now
  *  much more extensible to support other serial cards based on the
  *  16450/16550A UART's.  Added support for the AST FourPort and the
@@ -32,6 +34,9 @@
  *  4/98: Added changes to support the ARM architecture proposed by
  * 	  Russell King
  *
+ *  7/00: AMD Elan SC400 support
+ *        Markus Thiesmeyer
+ *
  * This module exports the following rs232 io functions:
  *
  *	int rs_init(void);
@@ -60,12 +65,17 @@
  * SERIAL_PARANOIA_CHECK
  * 		Check the magic number for the async_structure where
  * 		ever possible.
+ *
+ * CONFIG_SERIAL__SC400
+ *            Enable workaround for late LSR update in AMD Elan SC400
+ *
  */
 #include <linux/config.h>
 
 #undef SERIAL_PARANOIA_CHECK
 #define CONFIG_SERIAL_NOPAUSE_IO
 #define SERIAL_DO_RESTART
+#define CONFIG_SERIAL_AMD_SC400
 
 #if 0
 /* Normally these defines are controlled by the autoconf.h */
@@ -649,6 +659,9 @@
 static void rs_interrupt_single(int irq, void *dev_id, struct pt_regs * regs)
 {
 	int status;
+#ifdef CONFIG_SERIAL_AMD_SC400
+	int sc400txflag = 0, iid = 0;
+#endif
 	int pass_counter = 0;
 	struct async_struct * info;
 #ifdef CONFIG_SERIAL_MULTIPORT	
@@ -671,6 +684,7 @@
 #endif
 
 	do {
+
 		status = serial_inp(info, UART_LSR);
 #ifdef SERIAL_DEBUG_INTR
 		printk("status = %x...", status);
@@ -678,7 +692,13 @@
 		if (status & UART_LSR_DR)
 			receive_chars(info, &status);
 		check_modem_status(info);
+
+#ifdef CONFIG_SERIAL_AMD_SC400
+		if (((iid  == UART_IIR_THRI) || (status & UART_LSR_THRE))
+			&& !sc400txflag++)
+#else
 		if (status & UART_LSR_THRE)
+#endif
 			transmit_chars(info, 0);
 		if (pass_counter++ > RS_ISR_PASS_LIMIT) {
 #if 0
@@ -686,7 +706,15 @@
 #endif
 			break;
 		}
+
+#ifdef CONFIG_SERIAL_AMD_SC400
+		iid = serial_in(info, UART_IIR) 
+			& (UART_IIR_NO_INT | UART_IIR_ID);
+	} while (!(iid & UART_IIR_NO_INT));
+#else
 	} while (!(serial_in(info, UART_IIR) & UART_IIR_NO_INT));
+#endif
+
 	info->last_active = jiffies;
 #ifdef CONFIG_SERIAL_MULTIPORT	
 	if (multi->port_monitor)
